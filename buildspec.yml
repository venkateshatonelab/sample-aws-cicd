version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      # Install dependencies
      - npm install
      
      # Download and install SonarScanner
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
      - unzip sonar-scanner.zip
      - mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
      
      # Set up SonarScanner environment variables
      - export PATH=$PATH:/opt/sonar-scanner/bin
      - export SONAR_SCANNER_OPTS="-Xmx512m"
  
  pre_build:
    commands:
      # Run tests and generate coverage report
      - npm test

      # Run SonarScanner
      - sonar-scanner  -Dsonar.projectKey=sample-app -Dsonar.sources=. -Dsonar.host.url=http://3.108.50.135 -Dsonar.login=sqp_28b5663d94cc65f46e64c23c27b3fc89767fdd2e
  
  artifacts:
    files:
      - app.js
      - package.json
      - package-lock.json
      - node_modules/*

  # build:
  #   commands:
  #     # Create a ZIP file of the app files
  #     - zip -r sample-app.zip .
  
  # post_build:
  #   commands:
  #     # aws cli version
  #     - aws --version

  #     # Create a new Elastic Beanstalk application version
  #     - aws elasticbeanstalk create-application-version --application-name sample-app  --version-label v1 --source-bundle S3Bucket=codepipeline-ap-south-1-350224782417,S3Key=sample-app.zip
      
  #     # Deploy the new version to the Elastic Beanstalk environment
  #     - aws elasticbeanstalk update-environment --environment-name Sampleapp-env --version-label v1
